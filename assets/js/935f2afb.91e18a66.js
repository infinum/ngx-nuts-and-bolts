"use strict";(self.webpackChunkngx_nuts_and_bolts_docs=self.webpackChunkngx_nuts_and_bolts_docs||[]).push([[53],{1109:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"mainSidebar":[{"type":"link","label":"Introduction","href":"/ngx-nuts-and-bolts/docs/","docId":"introduction"},{"type":"link","label":"Environment variables","href":"/ngx-nuts-and-bolts/docs/environment-variables","docId":"environment-variables"},{"type":"link","label":"Loading state helpers","href":"/ngx-nuts-and-bolts/docs/loading-state","docId":"loading-state"},{"type":"link","label":"Table state helpers","href":"/ngx-nuts-and-bolts/docs/table-state","docId":"table-state"},{"type":"link","label":"InView directive","href":"/ngx-nuts-and-bolts/docs/in-view","docId":"in-view"},{"type":"link","label":"EnumProperty pipe","href":"/ngx-nuts-and-bolts/docs/enum-property","docId":"enum-property"},{"type":"link","label":"Fade and height animations","href":"/ngx-nuts-and-bolts/docs/animations","docId":"animations"},{"type":"link","label":"Form utils","href":"/ngx-nuts-and-bolts/docs/form-utils","docId":"form-utils"},{"type":"link","label":"DI Token Type","href":"/ngx-nuts-and-bolts/docs/di-token-type","docId":"di-token-type"},{"type":"category","label":"Testing utilities","items":[{"type":"link","label":"Extract public","href":"/ngx-nuts-and-bolts/docs/testing-utils/extract-public","docId":"testing-utils/extract-public"},{"type":"link","label":"Async data","href":"/ngx-nuts-and-bolts/docs/testing-utils/async-data","docId":"testing-utils/async-data"},{"type":"link","label":"Async error","href":"/ngx-nuts-and-bolts/docs/testing-utils/async-error","docId":"testing-utils/async-error"}],"collapsible":true,"collapsed":true}]},"docs":{"animations":{"id":"animations","title":"Fade and height animations","description":"1. Features","sidebar":"mainSidebar"},"di-token-type":{"id":"di-token-type","title":"DIToken type","description":"Use DITokenType in cases when you want to infer types of injection tokens in environments where typescript doesn\'t infer this automatically. E.g. when defining providers (most useful for useFactory providers)","sidebar":"mainSidebar"},"enum-property":{"id":"enum-property","title":"EnumProperty pipe","description":"1. Features","sidebar":"mainSidebar"},"environment-variables":{"id":"environment-variables","title":"Environment variables","description":"1. Introduction","sidebar":"mainSidebar"},"form-utils":{"id":"form-utils","title":"Form utils","description":"1. Features","sidebar":"mainSidebar"},"in-view":{"id":"in-view","title":"InView directive","description":"1. Introduction","sidebar":"mainSidebar"},"introduction":{"id":"introduction","title":"Introduction","description":"This NPM library contains reusable components and helpers to ease and speed up development and testing of angular applications.","sidebar":"mainSidebar"},"loading-state":{"id":"loading-state","title":"Loading state helpers","description":"...or how I learned to start worrying and handle the error states.","sidebar":"mainSidebar"},"table-state":{"id":"table-state","title":"Table state helpers","description":"1. Introduction","sidebar":"mainSidebar"},"testing-utils/async-data":{"id":"testing-utils/async-data","title":"Async data","description":"If and when returning mocked data from the testing service, users should avoid doing something like this:","sidebar":"mainSidebar"},"testing-utils/async-error":{"id":"testing-utils/async-error","title":"Async error","description":"If and when returning mocked error from the testing service or in tests, users should avoid doing something like this:","sidebar":"mainSidebar"},"testing-utils/extract-public":{"id":"testing-utils/extract-public","title":"Extract public","description":"Use ExtractPublic custom type when you want to extract public members of class. It could prove most useful when creating test doubles for your services or components.","sidebar":"mainSidebar"}}}')}}]);